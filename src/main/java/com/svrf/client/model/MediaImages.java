/*
 * SVRF API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@svrf.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.svrf.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Resized &#x60;jpeg&#x60; stills of the Media. For &#x60;video&#x60;, these will be stills from 1/3 of the video&#39;s duration. Resolutions larger than the original size will not be included (the original is included as &#x60;max&#x60;). For stereoscopic content, this will be a monoscopic version of the top or left channel.
 */
@ApiModel(description = "Resized `jpeg` stills of the Media. For `video`, these will be stills from 1/3 of the video's duration. Resolutions larger than the original size will not be included (the original is included as `max`). For stereoscopic content, this will be a monoscopic version of the top or left channel.")

public class MediaImages {
  @SerializedName("136")
  private String _136 = null;

  @SerializedName("540")
  private String _540 = null;

  @SerializedName("720")
  private String _720 = null;

  @SerializedName("1080")
  private String _1080 = null;

  @SerializedName("4096")
  private String _4096 = null;

  @SerializedName("8192")
  private String _8192 = null;

  @SerializedName("1080Watermarked")
  private String _1080Watermarked = null;

  @SerializedName("720x405")
  private String _720x405 = null;

  @SerializedName("720x540")
  private String _720x540 = null;

  @SerializedName("720x720")
  private String _720x720 = null;

  @SerializedName("max")
  private String max = null;

  public MediaImages _136(String _136) {
    this._136 = _136;
    return this;
  }

   /**
   * 136px wide image. This image may be used for thumbnailing.
   * @return _136
  **/
  @ApiModelProperty(value = "136px wide image. This image may be used for thumbnailing.")
  public String get136() {
    return _136;
  }

  public void set136(String _136) {
    this._136 = _136;
  }

  public MediaImages _540(String _540) {
    this._540 = _540;
    return this;
  }

   /**
   * 540px wide image. This image may be used for thumbnailing.
   * @return _540
  **/
  @ApiModelProperty(value = "540px wide image. This image may be used for thumbnailing.")
  public String get540() {
    return _540;
  }

  public void set540(String _540) {
    this._540 = _540;
  }

  public MediaImages _720(String _720) {
    this._720 = _720;
    return this;
  }

   /**
   * 720px wide image. This image may be used for thumbnailing.
   * @return _720
  **/
  @ApiModelProperty(value = "720px wide image. This image may be used for thumbnailing.")
  public String get720() {
    return _720;
  }

  public void set720(String _720) {
    this._720 = _720;
  }

  public MediaImages _1080(String _1080) {
    this._1080 = _1080;
    return this;
  }

   /**
   * 1080px wide image. This image should be used for previews or other uses requiring clear resolution at low bandwidth.
   * @return _1080
  **/
  @ApiModelProperty(value = "1080px wide image. This image should be used for previews or other uses requiring clear resolution at low bandwidth.")
  public String get1080() {
    return _1080;
  }

  public void set1080(String _1080) {
    this._1080 = _1080;
  }

  public MediaImages _4096(String _4096) {
    this._4096 = _4096;
    return this;
  }

   /**
   * 4096px wide image. This image should be used on mobile devices, as larger images may cause some devices to crash.
   * @return _4096
  **/
  @ApiModelProperty(value = "4096px wide image. This image should be used on mobile devices, as larger images may cause some devices to crash.")
  public String get4096() {
    return _4096;
  }

  public void set4096(String _4096) {
    this._4096 = _4096;
  }

  public MediaImages _8192(String _8192) {
    this._8192 = _8192;
    return this;
  }

   /**
   * The image at a reasonably large resolution that can be used for a better desktop experience.
   * @return _8192
  **/
  @ApiModelProperty(value = "The image at a reasonably large resolution that can be used for a better desktop experience.")
  public String get8192() {
    return _8192;
  }

  public void set8192(String _8192) {
    this._8192 = _8192;
  }

  public MediaImages _1080Watermarked(String _1080Watermarked) {
    this._1080Watermarked = _1080Watermarked;
    return this;
  }

   /**
   * 1080px wide watermarked image. This image should be used for sharing on social media.
   * @return _1080Watermarked
  **/
  @ApiModelProperty(value = "1080px wide watermarked image. This image should be used for sharing on social media.")
  public String get1080Watermarked() {
    return _1080Watermarked;
  }

  public void set1080Watermarked(String _1080Watermarked) {
    this._1080Watermarked = _1080Watermarked;
  }

  public MediaImages _720x405(String _720x405) {
    this._720x405 = _720x405;
    return this;
  }

   /**
   * A 16:9 image. This image may be used for thumbnailing.
   * @return _720x405
  **/
  @ApiModelProperty(value = "A 16:9 image. This image may be used for thumbnailing.")
  public String get720x405() {
    return _720x405;
  }

  public void set720x405(String _720x405) {
    this._720x405 = _720x405;
  }

  public MediaImages _720x540(String _720x540) {
    this._720x540 = _720x540;
    return this;
  }

   /**
   * A 4:3 image. This image may be used for thumbnailing.
   * @return _720x540
  **/
  @ApiModelProperty(value = "A 4:3 image. This image may be used for thumbnailing.")
  public String get720x540() {
    return _720x540;
  }

  public void set720x540(String _720x540) {
    this._720x540 = _720x540;
  }

  public MediaImages _720x720(String _720x720) {
    this._720x720 = _720x720;
    return this;
  }

   /**
   * A 1:1 image. This image may be used for thumbnailing.
   * @return _720x720
  **/
  @ApiModelProperty(value = "A 1:1 image. This image may be used for thumbnailing.")
  public String get720x720() {
    return _720x720;
  }

  public void set720x720(String _720x720) {
    this._720x720 = _720x720;
  }

  public MediaImages max(String max) {
    this.max = max;
    return this;
  }

   /**
   * The image in its largest available size (the original size). This image should be used in third-party applications for the best experience, except on mobile devices (see &#x60;4096&#x60;).
   * @return max
  **/
  @ApiModelProperty(value = "The image in its largest available size (the original size). This image should be used in third-party applications for the best experience, except on mobile devices (see `4096`).")
  public String getMax() {
    return max;
  }

  public void setMax(String max) {
    this.max = max;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MediaImages mediaImages = (MediaImages) o;
    return Objects.equals(this._136, mediaImages._136) &&
        Objects.equals(this._540, mediaImages._540) &&
        Objects.equals(this._720, mediaImages._720) &&
        Objects.equals(this._1080, mediaImages._1080) &&
        Objects.equals(this._4096, mediaImages._4096) &&
        Objects.equals(this._8192, mediaImages._8192) &&
        Objects.equals(this._1080Watermarked, mediaImages._1080Watermarked) &&
        Objects.equals(this._720x405, mediaImages._720x405) &&
        Objects.equals(this._720x540, mediaImages._720x540) &&
        Objects.equals(this._720x720, mediaImages._720x720) &&
        Objects.equals(this.max, mediaImages.max);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_136, _540, _720, _1080, _4096, _8192, _1080Watermarked, _720x405, _720x540, _720x720, max);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MediaImages {\n");
    
    sb.append("    _136: ").append(toIndentedString(_136)).append("\n");
    sb.append("    _540: ").append(toIndentedString(_540)).append("\n");
    sb.append("    _720: ").append(toIndentedString(_720)).append("\n");
    sb.append("    _1080: ").append(toIndentedString(_1080)).append("\n");
    sb.append("    _4096: ").append(toIndentedString(_4096)).append("\n");
    sb.append("    _8192: ").append(toIndentedString(_8192)).append("\n");
    sb.append("    _1080Watermarked: ").append(toIndentedString(_1080Watermarked)).append("\n");
    sb.append("    _720x405: ").append(toIndentedString(_720x405)).append("\n");
    sb.append("    _720x540: ").append(toIndentedString(_720x540)).append("\n");
    sb.append("    _720x720: ").append(toIndentedString(_720x720)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

