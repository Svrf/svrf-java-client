/*
 * SVRF API
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@svrf.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.svrf.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Resized &#x60;mp4&#x60; (&#x60;H.264&#x60;) videos of the Media. Only included if the Media is &#x60;video&#x60;. Resolutions larger than the original size will not be included (the original is included as &#x60;max&#x60;). For stereoscopic content, this will be a monoscopic version of the top or left channel.
 */
@ApiModel(description = "Resized `mp4` (`H.264`) videos of the Media. Only included if the Media is `video`. Resolutions larger than the original size will not be included (the original is included as `max`). For stereoscopic content, this will be a monoscopic version of the top or left channel.")

public class MediaVideos {
  @SerializedName("848")
  private String _848 = null;

  @SerializedName("1440")
  private String _1440 = null;

  @SerializedName("2160")
  private String _2160 = null;

  @SerializedName("4096")
  private String _4096 = null;

  @SerializedName("clip")
  private String clip = null;

  @SerializedName("hls")
  private String hls = null;

  @SerializedName("max")
  private String max = null;

  public MediaVideos _848(String _848) {
    this._848 = _848;
    return this;
  }

   /**
   * 848px wide video with a 1.3MBps video rate, 96KBps audio rate.
   * @return _848
  **/
  @ApiModelProperty(value = "848px wide video with a 1.3MBps video rate, 96KBps audio rate.")
  public String get848() {
    return _848;
  }

  public void set848(String _848) {
    this._848 = _848;
  }

  public MediaVideos _1440(String _1440) {
    this._1440 = _1440;
    return this;
  }

   /**
   * 1440px wide video with a 4.4MBps video rate, 128KBps audio rate.
   * @return _1440
  **/
  @ApiModelProperty(value = "1440px wide video with a 4.4MBps video rate, 128KBps audio rate.")
  public String get1440() {
    return _1440;
  }

  public void set1440(String _1440) {
    this._1440 = _1440;
  }

  public MediaVideos _2160(String _2160) {
    this._2160 = _2160;
    return this;
  }

   /**
   * 2160px wide video with a 10MBps video rate, 192KBps audio rate.
   * @return _2160
  **/
  @ApiModelProperty(value = "2160px wide video with a 10MBps video rate, 192KBps audio rate.")
  public String get2160() {
    return _2160;
  }

  public void set2160(String _2160) {
    this._2160 = _2160;
  }

  public MediaVideos _4096(String _4096) {
    this._4096 = _4096;
    return this;
  }

   /**
   * 4096px wide video with a 20MBps video rate, 256KBps audio rate.
   * @return _4096
  **/
  @ApiModelProperty(value = "4096px wide video with a 20MBps video rate, 256KBps audio rate.")
  public String get4096() {
    return _4096;
  }

  public void set4096(String _4096) {
    this._4096 = _4096;
  }

  public MediaVideos clip(String clip) {
    this.clip = clip;
    return this;
  }

   /**
   * A 6-second, 1440px wide clip, with a 2MBps video rate, no audio.
   * @return clip
  **/
  @ApiModelProperty(value = "A 6-second, 1440px wide clip, with a 2MBps video rate, no audio.")
  public String getClip() {
    return clip;
  }

  public void setClip(String clip) {
    this.clip = clip;
  }

  public MediaVideos hls(String hls) {
    this.hls = hls;
    return this;
  }

   /**
   * URL for an HLS master playlist containing streams in all of the above resolutions which are no wider than the original Media. This should be used for streaming unless the platform does not support HLS.
   * @return hls
  **/
  @ApiModelProperty(value = "URL for an HLS master playlist containing streams in all of the above resolutions which are no wider than the original Media. This should be used for streaming unless the platform does not support HLS.")
  public String getHls() {
    return hls;
  }

  public void setHls(String hls) {
    this.hls = hls;
  }

  public MediaVideos max(String max) {
    this.max = max;
    return this;
  }

   /**
   * Maximum resolution video (original source video), &#x60;width&#x60; pixels wide at unspecified video and audio rates.
   * @return max
  **/
  @ApiModelProperty(value = "Maximum resolution video (original source video), `width` pixels wide at unspecified video and audio rates.")
  public String getMax() {
    return max;
  }

  public void setMax(String max) {
    this.max = max;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MediaVideos mediaVideos = (MediaVideos) o;
    return Objects.equals(this._848, mediaVideos._848) &&
        Objects.equals(this._1440, mediaVideos._1440) &&
        Objects.equals(this._2160, mediaVideos._2160) &&
        Objects.equals(this._4096, mediaVideos._4096) &&
        Objects.equals(this.clip, mediaVideos.clip) &&
        Objects.equals(this.hls, mediaVideos.hls) &&
        Objects.equals(this.max, mediaVideos.max);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_848, _1440, _2160, _4096, clip, hls, max);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MediaVideos {\n");
    
    sb.append("    _848: ").append(toIndentedString(_848)).append("\n");
    sb.append("    _1440: ").append(toIndentedString(_1440)).append("\n");
    sb.append("    _2160: ").append(toIndentedString(_2160)).append("\n");
    sb.append("    _4096: ").append(toIndentedString(_4096)).append("\n");
    sb.append("    clip: ").append(toIndentedString(clip)).append("\n");
    sb.append("    hls: ").append(toIndentedString(hls)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

