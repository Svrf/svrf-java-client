/*
 * SVRF API
 * # Getting Started  SVRF's API allows you to supercharge your project or app with the first and largest search engine for immersive experiences. We make it simple for any developer to incorporate highly immersive experiences with all kinds of applications: virtual reality, augmented reality, mixed reality, mobile, and web.  The SVRF API is based on REST principles, allowing it to integrate cross-platform. Our endpoints return responses in [JSON][]. We support [CORS][], allowing you to access immersive experiences indexed by SVRF on your own web domains. We provide a variety of resolutions, projections, and file formats to support most modern clients.  The SVRF API Documentation is available at [https://developers.svrf.com][SVRF Dev].  ## Access and API Keys  The SVRF API is currently in private beta and access is limited to select partners. If you are interested in using the SVRF API for your app or project, please contact us at [api@svrf.com][API Email]. We cannot guarantee immediate access for all requests, but we will announce a public release in the coming months.  See our [terms of service][TOS] for restrictions on using the SVRF API.  If you have any questions please contact us at [api@svrf.com][API Email]. Submit API corrections via [GitHub Issues][].  ## API Highlights  ### Search Endpoint  The [SVRF Search Endpoint][Docs Search] brings the power of immersive search found on [SVRF.com][SVRF] to your app or project. Our search engine enables your users to instantly find the immersive experience they are seeking. Content is sorted by the SVRF rating system, ensuring that the highest quality and most relevant search results are returned first.  ### Trending Endpoint  The [SVRF Trending Endpoint][Docs Trending] provides your app or project with the hottest immersive content - curated by real humans. The experiences returned mirror the [SVRF homepage][SVRF], from timely cultural content to trending pop-culture references. The experiences are updated regularly to ensure users always get a fresh list of immersive content.  ## Attribution  ### Authors and Site Credit  At SVRF, we believe in giving credit where credit is due. Do your best to provide attribution to the `authors` and `site` where the content originated. We suggest using the format: __by {authors} via {site}__.  If possible, provide a way for users to discover and visit the page the content originally came from (`url`).  ### Powered By SVRF  As per section 5a of the [terms of service][TOS], __we require all apps that use the SVRF API to conspicuously display \"Powered By SVRF\" attribution marks where the API is utilized.__  ## Rate Limits  The SVRF API has a generous rate limit to ensure the best experience for your users. We rate limit by IP address with a maximum of 100 requests per second. If you exceed this rate limit, requests will be blocked for 60 seconds. Requests blocked by the rate limit will return with status code `429`.  [API Email]: mailto:api@svrf.com [CORS]: https://en.wikipedia.org/wiki/Cross-origin_resource_sharing [Docs Search]: https://developers.svrf.com/#tag/Media/paths/~1vr~1search?q={q}/get [Docs Trending]: https://developers.svrf.com/#tag/Media/paths/~1vr~1trending/get [GitHub Issues]: https://github.com/Svrf/svrf-api/issues [JSON]: http://www.json.org/ [SVRF]: https://www.svrf.com [SVRF Dev]: https://developers.svrf.com [TOS]: https://www.svrf.com/terms 
 *
 * OpenAPI spec version: 1.0.0
 * Contact: api@svrf.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.MediaFiles;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Media
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.java.JavaClientCodegen", date = "2018-06-01T15:32:03.812+03:00[Europe/Minsk]")
public class Media {

  @SerializedName("id")
  private String id = null;
  
  @SerializedName("title")
  private String title = null;
  
  @SerializedName("description")
  private String description = null;
  
  @SerializedName("authors")
  private List<String> authors = null;
  
  @SerializedName("site")
  private String site = null;
  
  @SerializedName("canonical")
  private String canonical = null;
  
  @SerializedName("url")
  private String url = null;
  
  /**
   * The type of the Media. This should influence the media controls displayed to the user.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    
    PHOTO("photo"),
    VIDEO("video");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }
  
  @SerializedName("type")
  private TypeEnum type = null;
  
  @SerializedName("adult")
  private Boolean adult = false;
  
  @SerializedName("width")
  private Integer width = null;
  
  @SerializedName("height")
  private Integer height = null;
  
  @SerializedName("duration")
  private Integer duration = null;
  
  @SerializedName("files")
  private MediaFiles files = null;
  
  public Media id(String id) {
    this.id = id;
    return this;
  }

  
  /**
  * The unique ID of this Media
  * @return id
  **/
  @ApiModelProperty(value = "The unique ID of this Media")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }
  
  public Media title(String title) {
    this.title = title;
    return this;
  }

  
  /**
  * The title of the Media, suitable for displaying
  * @return title
  **/
  @ApiModelProperty(value = "The title of the Media, suitable for displaying")
  public String getTitle() {
    return title;
  }
  public void setTitle(String title) {
    this.title = title;
  }
  
  public Media description(String description) {
    this.description = description;
    return this;
  }

  
  /**
  * A description of the Media
  * @return description
  **/
  @ApiModelProperty(value = "A description of the Media")
  public String getDescription() {
    return description;
  }
  public void setDescription(String description) {
    this.description = description;
  }
  
  public Media authors(List<String> authors) {
    this.authors = authors;
    return this;
  }

  public Media addAuthorsItem(String authorsItem) {
    
    if (this.authors == null) {
      this.authors = new ArrayList<String>();
    }
    
    this.authors.add(authorsItem);
    return this;
  }
  
  /**
  * The Media&#x27;s authors. This should be displayed when possible.
  * @return authors
  **/
  @ApiModelProperty(value = "The Media's authors. This should be displayed when possible.")
  public List<String> getAuthors() {
    return authors;
  }
  public void setAuthors(List<String> authors) {
    this.authors = authors;
  }
  
  public Media site(String site) {
    this.site = site;
    return this;
  }

  
  /**
  * The site that this Media came from. This should be displayed when possible.
  * @return site
  **/
  @ApiModelProperty(value = "The site that this Media came from. This should be displayed when possible.")
  public String getSite() {
    return site;
  }
  public void setSite(String site) {
    this.site = site;
  }
  
  public Media canonical(String canonical) {
    this.canonical = canonical;
    return this;
  }

  
  /**
  * The canonical page this Media can be found at via SVRF.
  * @return canonical
  **/
  @ApiModelProperty(value = "The canonical page this Media can be found at via SVRF.")
  public String getCanonical() {
    return canonical;
  }
  public void setCanonical(String canonical) {
    this.canonical = canonical;
  }
  
  public Media url(String url) {
    this.url = url;
    return this;
  }

  
  /**
  * The original page this Media is located at.
  * @return url
  **/
  @ApiModelProperty(value = "The original page this Media is located at.")
  public String getUrl() {
    return url;
  }
  public void setUrl(String url) {
    this.url = url;
  }
  
  public Media type(TypeEnum type) {
    this.type = type;
    return this;
  }

  
  /**
  * The type of the Media. This should influence the media controls displayed to the user.
  * @return type
  **/
  @ApiModelProperty(value = "The type of the Media. This should influence the media controls displayed to the user.")
  public TypeEnum getType() {
    return type;
  }
  public void setType(TypeEnum type) {
    this.type = type;
  }
  
  public Media adult(Boolean adult) {
    this.adult = adult;
    return this;
  }

  
  /**
  * Whether the Media is adult content
  * @return adult
  **/
  @ApiModelProperty(value = "Whether the Media is adult content")
  public Boolean isAdult() {
    return adult;
  }
  public void setAdult(Boolean adult) {
    this.adult = adult;
  }
  
  public Media width(Integer width) {
    this.width = width;
    return this;
  }

  
  /**
  * The width, in pixels, of the Media&#x27;s source
  * @return width
  **/
  @ApiModelProperty(value = "The width, in pixels, of the Media's source")
  public Integer getWidth() {
    return width;
  }
  public void setWidth(Integer width) {
    this.width = width;
  }
  
  public Media height(Integer height) {
    this.height = height;
    return this;
  }

  
  /**
  * The height, in pixels, of the Media&#x27;s source
  * @return height
  **/
  @ApiModelProperty(value = "The height, in pixels, of the Media's source")
  public Integer getHeight() {
    return height;
  }
  public void setHeight(Integer height) {
    this.height = height;
  }
  
  public Media duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  
  /**
  * The duration of the Media in seconds.
  * @return duration
  **/
  @ApiModelProperty(value = "The duration of the Media in seconds.")
  public Integer getDuration() {
    return duration;
  }
  public void setDuration(Integer duration) {
    this.duration = duration;
  }
  
  public Media files(MediaFiles files) {
    this.files = files;
    return this;
  }

  
  /**
  * Get files
  * @return files
  **/
  @ApiModelProperty(value = "")
  public MediaFiles getFiles() {
    return files;
  }
  public void setFiles(MediaFiles files) {
    this.files = files;
  }
  
  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Media media = (Media) o;
    return Objects.equals(this.id, media.id) &&
        Objects.equals(this.title, media.title) &&
        Objects.equals(this.description, media.description) &&
        Objects.equals(this.authors, media.authors) &&
        Objects.equals(this.site, media.site) &&
        Objects.equals(this.canonical, media.canonical) &&
        Objects.equals(this.url, media.url) &&
        Objects.equals(this.type, media.type) &&
        Objects.equals(this.adult, media.adult) &&
        Objects.equals(this.width, media.width) &&
        Objects.equals(this.height, media.height) &&
        Objects.equals(this.duration, media.duration) &&
        Objects.equals(this.files, media.files);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, title, description, authors, site, canonical, url, type, adult, width, height, duration, files);
  }
  
  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Media {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    authors: ").append(toIndentedString(authors)).append("\n");
    sb.append("    site: ").append(toIndentedString(site)).append("\n");
    sb.append("    canonical: ").append(toIndentedString(canonical)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    adult: ").append(toIndentedString(adult)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  
}



